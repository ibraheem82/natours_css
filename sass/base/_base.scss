/** @format */

*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

/* ! next */
html {
  /*  1rem => 10px */
  /* ! converting to rem just require dividing the px by 10 px / 10 */
  /* ! we can also use em but it requires alot of calculations */
  /* by doing this we have removed the ability of people that cant see properly they can no  */
  /* the default font-size when the user does not change anything is (16px) */
  /* * will translate to the percentage giving by the browser. */
  /* font-size: 10px; */
  /* * what we want divided by 16 */
  /* * because 16px is the default font-size by the browser. and we want 10px. */
  /* ! 10 / 16  = 0.625 which is 62.5% meaning -> .625 *16 = 10 */
  /* * by using this method we are allowing the user to zoom in automatically. */
  /* * putting 100% here means that the root font-size is 16px if the user does not change anything in the browser. */
  /* font-size: 100%; */

  // * it defines what 1rem is
  font-size: 62.5%;

  // * media queries before.

  // @media (max-width: 600px) {
  //     font-size: 50%;

  // }

  // @media (max-width: 900px) {

  //     font-size: 50%;
  // }

  //   @include respond-phone {
  //     font-size: 50%;
  //   }

  //   @include respond(phone) {
  // 1rem  = 10px; 10px / 16px = 62.5%
  //     font-size: 50%;
  //   }

  //   width < 1200
  @include respond(tab-land) {
    // 1rem = 9px, 9 / 16 = 56.25%
    font-size: 56.25%;
    // font-size: 70%;
  }

  //   width < 900
  @include respond(tab-port) {
    // want 1rem = 8px, 8 / 16 = 50%
    font-size: 50%;
  }

  @include respond(big-desktop) {
    // 1rem = 12px, 12 / 16 = 75%
    font-size: 75%;
  }
}

body {
  box-sizing: border-box;
  padding: 3rem;
}
