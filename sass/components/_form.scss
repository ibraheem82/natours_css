.form {
  // except the last on

  &__group:not(:last-child) {
    margin-bottom: 2rem;
  }

  &__input {
    font-size: 1.5rem;
    // * will inherit the parent font-family.
    // * All elements inherit the font-family except the [input] element, that why we are settting manually.
    font-family: inherit;
    // [input] element dont inherit the font propertise.
    color: inherit;
    padding: 1.2rem 2rem;
    border-radius: 2px;
    background-color: rgba($color-white, 0.5);
    border: none;
    transition: all 0.3s;

    //  * using because of the 3px border we specified before, just to stop the lable from moving down when the user click on the input.
    // * it will be invisible.
    border-bottom: 3px solid transparent;
    width: 90%;
    display: block;

    &:focus {
      outline: none;
      // * for accessability reason.
      box-shadow: 0 1rem 2rem rgba($color-black, 0.1);
      border-bottom: 3px solid $color-primary;
    }

    //   * Just a browser validation of the form.
    // * when the text you are writing is invalid
    &:focus:invalid {
      border-bottom: 3px solid $color-secondary-dark;
    }

    // * [::] stands for the thing that is on the webpage.
    // * because it is inside the form input.
    &::-webkit-input-placeholder {
      color: $color-gray-dark-2;
    }
  }

  &__label {
    font-size: 1.2rem;
    font-weight: 700;
    margin-left: 2rem;
    margin-top: 0.7rem;
    display: block;

    transition: all 0.3s;
  }

  //   * when the placeholder is shown which means when we have not written  anything in the input, we want the lable to be hidden .
  // * [+] selecting the adjacent siblings selector.

  // ! we want to make sure that the [label] does'nt show.

  // * as soon as we start writing the [placeholder] should be gone, and the label comes back.
  &__input:placeholder-shown + &__label {
    // * using opacity because we want to animate the effect.
    opacity: 0;
    visibility: hidden;
    // * when you start writing it should come from the top.
    transform: translateY(-4rem);
  }
  &__radio-group {
    // width: 50%;
    // * better than using float
    width: 49%;
    // so they dont create line breaks, be displayed side-by-side.
    display: inline-block;
  }

  &__radio-label {
    font-size: $default-font-size;
    cursor: pointer;
    position: relative;
    padding-left: 4.5rem;
  }

  &__radio-button {
    // want it to become a circle
    height: 3rem;
    width: 3rem;
    border: 5px solid $color-primary;
    // make it completely round.
    border-radius: 50%;
    // will work if use ( block or inline-block ).
    // * but inline block is a better option
    // display: block;
    display: inline-block;
    // to put it exactly where we want it to be.
    position: absolute;
    left: 0;
    // to move it up
    top: -0.4rem;

    //  after ->  form__radio-button
    &::after {
      // * Anytime you use a pesudo element you should always specify the content property
      //   just to add the littel dot even though it is not visible immediatly.
      content: "";
      display: block;
      //   in order to make the little dot show.
      height: 1.3rem;
      width: 1.3rem;
      //   make the little dot round
      border-radius: 50%;
      //   we want it to be positioned at the center or the other circle.
      position: absolute;
      top: 50%;
      left: 50%;
      //   to position the dot at the center of the circle.
      transform: translate(-50%, -50%);
      background-color: $color-primary;
      opacity: 0;
    }
  }
}
