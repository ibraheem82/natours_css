.row{
    max-width: $grid-width;
    // * to center a block element inside of another one.
    margin: 0 auto;



    // *.row:not()
    // selecting everything without the last child
    &:not(:last-child){
    margin-bottom: $gutter-vertical;

    @include respond(tab-port) {
            margin-bottom: $gutter-vertical-small;
        }
    }

    // .row::after
    @include clearfix;

    // attribute selector
    // wanting the beginning to be what we have set before.
    [class^="col-"] {
        float: left;
        padding: 1rem;

        &:not(:last-child){
            margin-right: $gutter-horizontal;
        @include respond(tab-port) {
                margin-right: 0;
         }
    }

        @include respond(tab-port) {
            width: 100% !important; 
        }
    }




    // because we having it in the row.
    .col-1-of-2{
        //the  width of the column is the entire width of the row minus the gutter divided by 2.
        width: calc((100% - #{$gutter-horizontal}) / 2);

        // &:not(:last-child){
        //     margin-right: $gutter-horizontal;
        // }
    }


    .col-1-of-3{
        width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
    }

    // ! complex ! 
    .col-2-of-3{
        width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal});
    }

    .col-1-of-4{
        width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
    }

    .col-2-of-4{
        width: calc(2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal});
    }

    .col-3-of-4{
        width: calc(3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal});
    }
}