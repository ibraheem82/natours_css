.navigation{
    &__checkbox{
        display: none;
    }


    &__button{
        background-color: $color-white;
        height: 7rem;
        width: 7rem;
        position:fixed;
        top: 6rem;
        right: 6rem;
        border-radius: 50%;
        z-index: 2000;

        box-shadow: 0 1rem 3rem rgba($color-black, .1);
        text-align: center;
        cursor: pointer;

        @include respond(tab-port){
            top: 4rem;
            right: 4rem;
        }
    }

    &__background{
        height: 6rem;
        width: 6rem;
        border-radius: 50%;
        position: fixed;
        top: 6.5rem;
        // to make it be at the corner
        right: 6.5rem;
        // it starts in the middle of an element, and goes outside in the outter direction
        background-image: radial-gradient($color-primary, $color-black);
        z-index: 1000;
        // Custom animation function
        // * it specify how much changes occurs over time. [easeInOutCirc]
        // can be used instead of 
        transition: transform .8s cubic-bezier(0.85, 0, 0.15, 1);


        // ! testing
        // transform: scale(80);
    }


    &__nav{
        height: 100vh;
        position: fixed;
        top: 0;
        // left can also be used here.
        left: 0;
        // background-color: orangered;
        // right: 0;
        z-index: 1500;

        // want to make sure that the navigation has no width.
        opacity: 0;
        width: 0;
        // [ easeInOutBack ]
        transition: all .8s cubic-bezier(0.68, -0.6, 0.32, 1.6);
    }

    &__list{
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        list-style: none;
        text-align: center;
        width: 100%;
    }

    &__item{
        margin: 1rem;
    }



    &__link{
        &:link,
        &:visited{
            display: inline-block;
        font-size: 3rem;
        font-weight: 300;
        padding: 1rem 2rem;
        color: $color-white;
        text-decoration: none;
        text-transform: uppercase;
        // background-image: linear-gradient(120deg, blue 0%, orangered 50%, $color-white 50%);
        // background-size: 100%;
        // background-size: 200%;
        background-image: linear-gradient(120deg, transparent 0%, transparent 50%, $color-white 50%);
        background-size: 220%;
        transition: all .4s;


        span{
            margin-right: 1.5rem;
            display: inline-block;
        }
        }
        
        &:hover,
        &:active{
            // the background will shift to the left side, because the position is at 100%
            background-position: 100%;
            color: $color-primary;
            transform: translateX(1rem);
        }
    }
// * CHECKBOX -> FUNCTIONALITY
    &__checkbox:checked ~ &__background{
        transform: scale(80);
    }

     &__checkbox:checked ~ &__nav{
        opacity: 1;
        width: 100%;
    }


    // ICON
    &__icon{
        position: relative;
        margin-top: 3.5rem;
        &,
        &::before,
        &::after{
            width: 3rem;
            height: 2px;
            background-color: $color-gray-dark-3;
            display: inline-block;
        }

        &::before,
        &::after{
            content: "";
            position: absolute;
            left: 0;
            transition: all .2s;
            // transition: all 2s;
        }

        // * [translate] can also be use to make it push to the top.
        &::before{
            // to move it up
            top: -.8rem;
            // sometimes it can be useful
            // * it describes where the transformations happens.
            // transform-origin: right;
        }

        &::after{
            top: .8rem;
        }
    }
// selecting the child element.
    &__button:hover &__icon::before{
        top: -1rem;
    }

     &__button:hover &__icon::after{
        top: 1rem;
    }

    // when the checkbox is checked we want the bars to cross, by selecting the button because it is a adjacent siblings
    &__checkbox:checked + &__button &__icon{
        background-color: transparent;
    }

    &__checkbox:checked + &__button &__icon::before{
        top: 0;
    //    transform: rotate(45deg);
    // * [ 360 / 2 ] -> 180
    // * [180 - 45] -> 135
       transform: rotate(135deg);
    }

    &__checkbox:checked + &__button &__icon::after{
        top: 0;
        // transform: rotate(-45deg);
        // * [ 360 / 2 ] -> 180
        // * [180 - 45] -> 135
        transform: rotate(-135deg);
    }

}